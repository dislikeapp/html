{"name":"ResourceManager","type":"class","module":"Resources","fields":[],"methods":[{"signature":"constructor(Resource resourceClass, [String managerName, String resourceName])","description":"constructs a ResourceManager for the given [Resource] type","params":[{"name":"resourceClass","desc":"The type of [Resource] this manager is managing."},{"name":"managerName","desc":"String name of this manager. Defaults to \"ResourceManager\" if omitted."},{"name":"resourceName","desc":"String name of the kind of [Resource] this manager uses. Defaults to the Function name (resourceClass.name) if omitted."}]},{"signature":"declare(String name, String filePath)","description":"Declares a new managed [Resource] of the manager's type.","params":[{"name":"name","desc":"The name of the new [Resource]."},{"name":"filePath","desc":"The path to the new [Resource]."}]},{"signature":"getLoaded(String name [, Function onLoaded, Function onError])","description":"Get the [Resource] by name, loading it if not already loaded.\n\nIf the [Resource] needs to be loaded, the unloaded [Resource] will be returned, and it's asynchronous load procedure will be started in the background.","params":[{"name":"name","desc":"The name of the [Resource]."},{"name":"onLoaded","desc":"A Function that gets called on a successful load. Ignored if omitted."},{"name":"onError","desc":"A Function that gets called on a failed load. Ignored if omitted."}]}],"description":"Manages declaration, fetching, loading, and unloading of a given type of [Resource].","extends":["Observable"]}